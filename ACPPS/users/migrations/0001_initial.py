# Generated by Django 5.2.1 on 2025-06-02 07:11

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('full_name', models.CharField(max_length=255)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('supervisor', 'Supervisor')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupervisorProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('office_number', models.CharField(max_length=20)),
                ('expertise', models.TextField(blank=True, null=True)),
                ('supervision_capacity', models.PositiveIntegerField(default=0)),
                ('standardised_expertise', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisors', to='academics.department')),
                ('preferred_programmes_first_choice', models.ManyToManyField(blank=True, related_name='supervisors_first_choice', to='academics.programme')),
                ('preferred_programmes_second_choice', models.ManyToManyField(blank=True, related_name='supervisors_second_choice', to='academics.programme')),
            ],
        ),
        migrations.CreateModel(
            name='CoordinatorProfile',
            fields=[
                ('supervisor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.supervisorprofile')),
                ('appointed_on', models.DateTimeField(auto_now_add=True)),
                ('role_scope', models.CharField(choices=[('system', 'System-wide'), ('department', 'Department'), ('school', 'School')], default='system', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('preference_text', models.TextField(blank=True, null=True)),
                ('positive_preferences', models.TextField(blank=True, null=True)),
                ('negative_preferences', models.TextField(blank=True, null=True)),
                ('programme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='academics.programme')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='users.supervisorprofile')),
            ],
        ),
    ]
